apply plugin: 'java'
apply plugin: 'application'

version = '1.0'

buildDir = 'target/gradle-build'

//configurations {
//    compileOnly
//    wildflyTestRuntime { extendsFrom testRuntime }
//}

//sourceSets {
//    main {
//        compileClasspath = configurations.compile
//    }
//    test {
//       // compileClasspath = compileClasspath
//    }
//}

dependencies {
    compile 'log4j:log4j:1.2.17'
    runtime 'log4j:log4j:1.2.17'
    compile project(':apiModule')
    compile 'org.jboss.spec:jboss-javaee-7.0:1.0.2.Final'
    compile project(':entities-persistence')

    testCompile group: 'junit', name: 'junit', version: '4.11'
    testCompile 'org.jboss.arquillian.junit:arquillian-junit-container:1.1.5.Final'

    testCompile project(':entities-persistence')
    testCompile 'org.hibernate.javax.persistence:hibernate-jpa-2.0-api:1.0.1.Final'
    testCompile 'org.hibernate:hibernate-entitymanager:4.3.9.Final'

    // temporarily downgrade the weld-ee-embedded-1.1 container
    testCompile "org.jboss.arquillian.junit:arquillian-junit-container:${libraryVersions.arquillian}"
    testCompile "org.jboss.arquillian.protocol:arquillian-protocol-servlet:${libraryVersions.arquillian}"
    testCompile "org.wildfly:wildfly-arquillian-container-managed:${libraryVersions.wildfly}"
    testCompile "org.jboss.shrinkwrap.resolver:shrinkwrap-resolver-gradle-depchain:${libraryVersions.shrinkWrapResolverGradle}"

}

task wildflyTest(type: Test) {
    testClassesDir = sourceSets.test.output.classesDir
    classpath = sourceSets.test.runtimeClasspath + sourceSets.main.runtimeClasspath
}

// utworzenie jara z zaleznosciami compile
jar {
    from configurations.compile.collect { it.isDirectory() ? it : zipTree(it) }
}

test {
    testLogging {
        events 'passed', 'skipped', 'failed'
        exceptionFormat = 'full'
    }
}